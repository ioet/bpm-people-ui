{
  "swagger": "2.0",
  "info": {
    "description": "Manage people in bpm-people-project",
    "version": "0.0.1",
    "title": "BPM People API"
  },
  "host": "localhost:9081",
  "basePath": "/people-service",
  "tags": [
    {
      "name": "person-controller",
      "description": "Manage People"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/people": {
      "get": {
        "tags": [
          "person-controller"
        ],
        "summary": "Return a list of all persons",
        "operationId": "getAllPersonsUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Persons successfully returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "person-controller"
        ],
        "summary": "Create a new person",
        "operationId": "createPersonUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "person",
            "description": "person",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "201": {
            "description": "Person successfully created",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Email already exists"
          }
        },
        "deprecated": false
      }
    },
    "/people/change-password/{id}": {
      "post": {
        "tags": [
          "person-controller"
        ],
        "summary": "Change the password of one person",
        "operationId": "changePasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "personToUpdate",
            "description": "personToUpdate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Persons password successfully updated",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The person to change the password was not found"
          }
        },
        "deprecated": false
      }
    },
    "/people/{id}": {
      "get": {
        "tags": [
          "person-controller"
        ],
        "summary": "Return one person",
        "operationId": "getPersonUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Person successfully returned",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "person-controller"
        ],
        "summary": "Update a person",
        "operationId": "updatePersonUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "personToUpdate",
            "description": "personToUpdate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Person successfully updated",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The person to update was not found"
          },
          "409": {
            "description": "Email already exists"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "person-controller"
        ],
        "summary": "Delete a person",
        "operationId": "deletePersonUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "204": {
            "description": "Person successfully deleted",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The person to delete was not found"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Iterable": {
      "type": "object",
      "title": "Iterable"
    },
    "Person": {
      "type": "object",
      "properties": {
        "authentication_identity": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Person"
    }
  }
}
