{
  "swagger":"2.0",
  "info":{
    "description":"API with CRUD methods for the bpm-people-project",
    "version":"0.0.1",
    "title":"BPM People API"
  },
  "host":"localhost:9081",
  "basePath":"/people-service/",
  "tags":[
    {
      "name":"person-controller",
      "description":"Manage People"
    }
  ],
  "schemes":[
    "http"
  ],
  "paths":{
    "/people":{
      "get":{
        "tags":[
          "person-controller"
        ],
        "summary":"Return a list of all persons",
        "operationId":"getAllPersonsUsingGET",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Successfully retrieved all persons",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/Person"
              }
            }
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      },
      "post":{
        "tags":[
          "person-controller"
        ],
        "summary":"Return the created person",
        "operationId":"createPersonUsingPOST",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "in":"body",
            "name":"person",
            "description":"person",
            "required":true,
            "schema":{
              "$ref":"#/definitions/Person"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/Person"
            }
          },
          "201":{
            "description":"Successfully created the person",
            "schema":{
              "$ref":"#/definitions/Person"
            }
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      }
    },
    "/people/change-password/{id}":{
      "post":{
        "tags":[
          "person-controller"
        ],
        "summary":"Return the updated person",
        "operationId":"changePasswordUsingPOST",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"id",
            "in":"path",
            "description":"id",
            "required":true,
            "type":"string"
          },
          {
            "in":"body",
            "name":"personToUpdate",
            "description":"personToUpdate",
            "required":true,
            "schema":{
              "$ref":"#/definitions/Person"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successfully updated the persons password",
            "schema":{
              "$ref":"#/definitions/Person"
            }
          },
          "201":{
            "description":"Created"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"The person to update was not found"
          }
        }
      }
    },
    "/people/{id}":{
      "get":{
        "tags":[
          "person-controller"
        ],
        "summary":"Return one persons",
        "operationId":"getPersonUsingGET",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"id",
            "in":"path",
            "description":"id",
            "required":true,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"Successfully retrieved the person",
            "schema":{
              "$ref":"#/definitions/Person"
            }
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      },
      "put":{
        "tags":[
          "person-controller"
        ],
        "summary":"Return the updated person",
        "operationId":"updatePersonUsingPUT",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"id",
            "in":"path",
            "description":"id",
            "required":true,
            "type":"string"
          },
          {
            "in":"body",
            "name":"personToUpdate",
            "description":"personToUpdate",
            "required":true,
            "schema":{
              "$ref":"#/definitions/Person"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successfully updated the person",
            "schema":{
              "$ref":"#/definitions/Person"
            }
          },
          "201":{
            "description":"Created"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"The person to update was not found"
          }
        }
      },
      "delete":{
        "tags":[
          "person-controller"
        ],
        "summary":"Delete a person",
        "operationId":"deletePersonUsingDELETE",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"id",
            "in":"path",
            "description":"id",
            "required":true,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/Person"
            }
          },
          "204":{
            "description":"Successfully deleted the person",
            "schema":{
              "$ref":"#/definitions/Person"
            }
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"The person to delete was not found"
          }
        }
      }
    }
  },
  "definitions":{
    "Iterable":{
      "type":"object"
    },
    "Person":{
      "type":"object",
      "properties":{
        "authentication_identity":{
          "type":"string"
        },
        "created":{
          "type":"string",
          "format":"date-time"
        },
        "id":{
          "type":"string"
        },
        "name":{
          "type":"string"
        },
        "password":{
          "type":"string"
        },
        "updated":{
          "type":"string",
          "format":"date-time"
        }
      }
    }
  }
}
